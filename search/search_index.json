{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"python-code-standards/","title":"Python Code Formatting","text":"<p>In Python, adhering to consistent code formatting standards is crucial for readability and maintainability. <code>yapf</code> is one of the tools that helps automate this process while following PEP8 guidelines.</p>"},{"location":"python-code-standards/#using-yapf-for-python-code-formatting","title":"Using <code>yapf</code> for Python Code Formatting","text":"<p><code>yapf</code> is a Python code formatter developed by Google that applies opinionated formatting rules to your code. It's highly configurable and follows PEP8 conventions.</p>"},{"location":"python-code-standards/#installation","title":"Installation","text":"<p>You can install <code>yapf</code> via pip:</p> <pre><code>pip install yapf\n</code></pre> <p>In vscode, you can install the yapf formatter</p> <p>https://marketplace.visualstudio.com/items?itemName=eeyore.yapf</p>"},{"location":"python-code-standards/#benefits-of-using-yapf","title":"Benefits of Using yapf","text":"<ul> <li>Consistency: yapf ensures a consistent code style throughout your project, reducing merge conflicts and readability issues.</li> <li>PEP8 Compliance: The tool follows PEP8 guidelines, ensuring code consistency across different contributors.</li> <li>Customization: While yapf comes with default settings, it allows configuration according to specific project needs.</li> </ul>"},{"location":"python-code-standards/#yapf-configuration","title":"Yapf configuration","text":"<p>Our python projects use either a pyproject.toml file or a yapf style file for configuration settings.</p>"},{"location":"python-code-standards/#settings-for-pyprojecttoml-file","title":"Settings for pyproject.toml file","text":"<pre><code>[tool.yapfignore]\nignore_patterns = [\n    \".venv/**\",\n    \".pytest_cache/**\",\n    \"dist/**\",\n    \"docs/**\"\n]\n\n[tool.yapf]\nbased_on_style = \"pep8\"\nspaces_before_comment = 4\ncolumn_limit = 120\nsplit_before_logical_operator = true\n</code></pre>"},{"location":"python-code-standards/#settings-for-styleyapf","title":"Settings for .style.yapf","text":"<pre><code>[style]\nbased_on_style = pep8\nspaces_before_comment = 4\ncolumn_limit = 120\nsplit_before_logical_operator = true\n\n[exclude]\npatterns = [\n    \".venv/**\",\n    \".pytest_cache/**\",\n    \"dist/**\",\n    \"docs/**\"\n]\n</code></pre>"}]}